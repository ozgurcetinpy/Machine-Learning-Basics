{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Doğrusal Bağlanım Örneği.pynb","provenance":[],"authorship_tag":"ABX9TyNPtYb8tLIExwGTdBrikxju"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Ev Fiyat Tahmini"],"metadata":{"id":"Qv2pGzF7LWXj"}},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TcBGE_wLLSDW","executionInfo":{"status":"ok","timestamp":1641833849666,"user_tz":-180,"elapsed":2979,"user":{"displayName":"Özgür Çetin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15568653990884069427"}},"outputId":"4d53c141-cf6e-40ed-e962-a1c300dcaeb0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/boston_housing.npz\n","57344/57026 [==============================] - 0s 0us/step\n","65536/57026 [==================================] - 0s 0us/step\n"]}],"source":["## Boston Veri Setini Yüklemek\n","\n","from keras.datasets import boston_housing\n","\n","(train_data,train_targets),(test_data,test_targets) = boston_housing.load_data()"]},{"cell_type":"code","source":["train_data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oKkFqxXHNJyK","executionInfo":{"status":"ok","timestamp":1641821847941,"user_tz":-180,"elapsed":289,"user":{"displayName":"Özgür Çetin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15568653990884069427"}},"outputId":"24dd9245-3529-430c-b83a-3553d9322033"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(404, 13)"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["test_data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hohwwelPNO5c","executionInfo":{"status":"ok","timestamp":1641821833856,"user_tz":-180,"elapsed":290,"user":{"displayName":"Özgür Çetin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15568653990884069427"}},"outputId":"e82ce664-6300-400d-d849-bae83f6e697c"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(102, 13)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["## Verilerin Hazırlanması\n","\n","### => Hepsi çok farklı aralıkta olan verilerle sinir ağlarını beslemek sorun çıkartabilir. Bunun için genellikle nitelik bazında normalize edilmektedir\n","### => Her sütundan o sütunun ortalamasını çıkarıp, standart sapmasına bölmektir\n","\n","mean = train_data.mean(axis = 0)\n","std = train_data.std(axis = 0)\n","\n","train_data -= mean\n","train_data /= std\n","\n","test_data -= mean\n","test_data /= std\n","\n","\n","### Kesinlikle iş akışında test veri seti üzerinde hesaplanan değer kullanılmaz ###"],"metadata":{"id":"yMpiSAzaNUoz","executionInfo":{"status":"ok","timestamp":1641822313295,"user_tz":-180,"elapsed":281,"user":{"displayName":"Özgür Çetin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15568653990884069427"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["## Ağı İnşa Etmek\n","\n","from keras import layers\n","from keras import models\n","\n","### Aynı modeli birden fazla kez oluşturmak yerine, bir fonksiyon ile yapabiliriz.\n","\n","def BuildModel():\n","  model = models.Sequential()\n","  model.add(layers.Dense(64,activation=\"relu\",input_shape = (train_data.shape[1])))\n","  model.add(layers.Dense(64,activation=\"relu\"))\n","  model.add(layers.dense(1))  ## Aktivasyon yok, yani doğrusal bir katman\n","  ## Örneğin son katmanda sigmoid aktivasyon fonksiyonunu kullanmak, çıktıların değerleri sadece 0 ile 1 arasında olabilecektir.\n","  ## İşte bu yüzden son katman sadece doğrusal seçilmelidir. \n","\n","  ## Modeli Derlemek\n","  model.compile(optimizer = \"rmsprop\",loss = \"mse\", metrics = [\"mae\"])\n","  # mse = mean squared error,  tahminler ile doğru hedeflerin arasındaki farkın karesidir.\n","  # mae = mean absolute error, tahminler ile doğru hedeflerin arasındaki farkın mutlak değeridir.\n","  return model"],"metadata":{"id":"ApLok0DCPH_8","executionInfo":{"status":"ok","timestamp":1641834803423,"user_tz":-180,"elapsed":522,"user":{"displayName":"Özgür Çetin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15568653990884069427"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["train_data.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tzYesSwjAIwT","executionInfo":{"status":"ok","timestamp":1641835272926,"user_tz":-180,"elapsed":578,"user":{"displayName":"Özgür Çetin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15568653990884069427"}},"outputId":"f340bb5f-ac08-4256-81f5-06d13ea99b28"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["train_targets.ndim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YtR4w-pPALQ_","executionInfo":{"status":"ok","timestamp":1641835280239,"user_tz":-180,"elapsed":437,"user":{"displayName":"Özgür Çetin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15568653990884069427"}},"outputId":"f36dcda1-931a-4760-cc26-665487437286"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["#@title\n","## K-Fold Doğrulama ile Yaklaşımınızı Doğrulamak\n","\n","## Doğrulama veri seti ayırmak, zaten az sayıda değeri olan veri setinde daha da az değer bırakıcaktır.\n","## Bu sebeple K-Fold Çapraz Doğrulama kullanılır.\n","\n","\n","import numpy as np\n","\n","# Eldeki veri K parçaya ayrılır. (genelde k = 4 veya k = 5 olur.)\n","\n","k = 4\n","num_val_samples = len(train_data) // k   # Validation için örneklem kümesi oluşturduk.\n","num_epochs = 100\n","all_scores = []\n","\n","for i in range(k):\n","  print(\"processing fold #\",i)\n","  # K. parçadaki doğrulama verisini hazırlar.\n","  val_data = train_data[i * num_val_samples: (1+i) * num_val_samples]\n","  val_targets = train_targets[i * num_val_samples : (i+1) * num_val_samples]\n","\n","  #Eğitim veri setini hazırlayalım: Veriler diğer parçadan gelir.\n","  partial_train_data = np.concatenate([train_data[:i * num_val_samples], train_targets[(i+1) * num_val_samples:]], axis = 0)\n","  partial_train_targets = np.concatenate([train_targets[:i * num_val_samples], train_targets[(i+1) * num_val_samples]], axis = 0)\n","  \n","  model = BuildModel() ## Modeli derler.\n","  model.fit(partial_train_data,\n","            partial_train_targets,\n","            epochs = num_epochs, \n","            batch_size = 1, \n","            verbose = 0)\n","\n","  val_mse, val_mae = model.evaluate(val_data, val_targets, verbose = 0)\n","  all_scores.append(val_mae)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5xOhfKmE-L9v","executionInfo":{"status":"ok","timestamp":1641834673935,"user_tz":-180,"elapsed":394,"user":{"displayName":"Özgür Çetin","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"15568653990884069427"}},"outputId":"0cfae40b-133c-4a0c-ae24-54838c5de189"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(404,)"]},"metadata":{},"execution_count":9}]}]}